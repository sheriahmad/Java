import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.*;

import com.sun.org.apache.xerces.internal.impl.xpath.regex.ParseException;

import jdk.internal.dynalink.beans.StaticClass;

/**
 * @author Sheheryar Ahmad
 */
public class SharEightSevenCentral {
	public static String one_hour_earlier() {
		return null;
	}
	
	public  boolean isCentralTime() {
		return false;
	}
	
	public static String to_calander_formate() {
		return null;
	}
	
	   private static final String DATE_FORMAT = "dd-M-yyyy hh:mm:ss a";

	    public static void main(String[] args) {

	        String dateInString = "22-1-2015 10:15:55 AM";
	        LocalDateTime ldt = LocalDateTime.parse(dateInString, DateTimeFormatter.ofPattern(DATE_FORMAT));

	        ZoneId singaporeZoneId = ZoneId.of("Asia/Singapore");
	        System.out.println("TimeZone : " + singaporeZoneId);

	        //LocalDateTime + ZoneId = ZonedDateTime
	        ZonedDateTime asiaZonedDateTime = ldt.atZone(singaporeZoneId);
	        System.out.println("Date (Singapore) : " + asiaZonedDateTime);

	        ZoneId newYokZoneId = ZoneId.of("America/New_York");
	        System.out.println("TimeZone : " + newYokZoneId);

	        ZonedDateTime nyDateTime = asiaZonedDateTime.withZoneSameInstant(newYokZoneId);
	        System.out.println("Date (New York) : " + nyDateTime);

	        DateTimeFormatter format = DateTimeFormatter.ofPattern(DATE_FORMAT);
	        System.out.println("\n---DateTimeFormatter---");
	        System.out.println("Date (Singapore) : " + format.format(asiaZonedDateTime));
	        System.out.println("Date (New York) : " + format.format(nyDateTime));

	    }

	}