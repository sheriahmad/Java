import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.*;

import com.sun.org.apache.xerces.internal.impl.xpath.regex.ParseException;

import jdk.internal.dynalink.beans.StaticClass;

/**
 * @author Sheheryar Ahmad
 */
public class SharEightSevenCentral {
	public static String one_hour_earlier() {
		return null;
	}
	
	public  boolean isCentralTime() {
		return false;
	}
	
	public static String to_calander_formate() {
		return null;
	}
	
	   private static final String DATE_FORMAT = "dd-M-yyyy hh:mm:ss a";

	   public static String formatDateToString(Date date, String format,
				String timeZone) {
			// null check
			if (date == null) return null;
			// create SimpleDateFormat object with input format
			SimpleDateFormat sdf = new SimpleDateFormat(format);
			// default system timezone if passed null or empty
			if (timeZone == null || "".equalsIgnoreCase(timeZone.trim())) {
				timeZone = Calendar.getInstance().getTimeZone().getID();
			}
			// set timezone to SimpleDateFormat
			sdf.setTimeZone(TimeZone.getTimeZone(timeZone));
			// return Date in required format with timezone as String
			return sdf.format(date);
		}

		public static void main(String[] args) {
			//Test formatDateToString method
			Date date = new Date();
			System.out.println("Default Date:"+date.toString());
			System.out.println("System Date: "+formatDateToString(date, "dd MMM yyyy hh:mm:ss a", null));
			System.out.println("System Date in PST: "+formatDateToString(date, "dd MMM yyyy hh:mm:ss a", "PST"));
			System.out.println("System Date in IST: "+formatDateToString(date, "dd MMM yyyy hh:mm:ss a", "IST"));
			System.out.println("System Date in GMT: "+formatDateToString(date, "dd MMM yyyy hh:mm:ss a", "GMT"));
		}

	}